RESUMEN DE LA CLASE
|
Configuración de Node.js en un ambiente productivo
|
|
Instrucciones
|

    Clonar el repositorio necesario para realizar la clase

git clone https://github.com/edisoncast/linux-platzi

    Instalar Node.js y npm

sudo apt install nodejs npm

    Posicionados en el home, descargar Node 10

curl -sL https://deb.nodesource.com/setup_10.x -o node_setup.sh



    Instalar Node 10

sudo bash node_setup.sh

    Instalar gcc, g++ y make

sudo apt install gcc g++ make

    Finalizar el proceso de instalación de la versión 10 de Node

sudo apt install -y nodejs

    Agregar el usuario nodejs si todavía no lo creaste

sudo adduser nodejs

# Creación de un usuario para manejar los procesos de Node.js:

    En la carpeta de linux-platzi, ejecutar el archivo server.js

node server.js

    Crear un archivo de configuración para el servicio de Node

sudo vim /lib/systemd/system/platzi@.service

# Una vez creado el archivo, llenarlo con la siguiente información
# Creación del script /lib/systemd/system/platzi@.service para que el servicio de Node.js arranque con el sistema operativo:



[Unit]
Description=Balanceo de carga para Platzi
Documentation=https://github.com/edisoncast/linux-platzi
After=network.target

[Service]
Enviroment=PORT=%i
Type=simple
User=nodejs
WorkingDirectory=/home/nodejs/linux-platzi
ExecStart=/usr/bin/node /home/nodejs/linux-platzi/server.js
Restart-on=failure

[Install]
WantedBy=multi-user.target


## 
Tuve varios problemas para hacer esta prueba y me faltaron algunos comandos que quizas a ustedes les puedan servir

Tuve que hacer el link

ln -s /etc/nginx/sites-available/default /etc/nginx/sites-enabled/defatul 

para validar la configuraicón y releer el conf

nginx -s reload

para que no chocara el default available site con el config.d (edite el archivo y le cambie el puerto)

edite el archivo y guarde

sudo nano /etc/nginx/conf.d/stub_status.conf

reboot a nginx